{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst buttonTimer = document.querySelector('button[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst day = document.querySelector('span[data-days]');\nconst hour = document.querySelector('span[data-hours]');\nconst minute = document.querySelector('span[data-minutes]');\nconst second = document.querySelector('span[data-seconds]');\n\nbuttonTimer.addEventListener('click', updateCounter);\n\nbuttonTimer.disabled = true;\nlet userSelectedDate = '';\nlet intervalId = '';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        color: '#ef4040',\n      });\n    } else {\n      buttonTimer.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction updateCounter() {\n  intervalId = setInterval(addTimer, 1000);\n  buttonTimer.disabled = true;\n  input.disabled = true;\n}\n\nconst addLeadingZero = value => value.toString().padStart(2,'0');\n\nfunction addTimer() {\n  const msDiff = userSelectedDate - new Date();\n  if (msDiff >= 0) {\n    let time = convertMs(msDiff);\n    day.textContent = addLeadingZero(time.days);\n    hour.textContent = addLeadingZero(time.hours);\n    minute.textContent = addLeadingZero(time.minutes);\n    second.textContent = addLeadingZero(time.seconds);\n  } else {\n    iziToast.success({\n      title: 'Ok!',\n      message: 'Countdown is over',\n      color: '#59a10d',\n    });\n    clearTimer();\n  }\n}\n\nfunction clearTimer() {\n  clearInterval(intervalId);\n  buttonTimer.disabled = true;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["buttonTimer","input","day","hour","minute","second","updateCounter","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","addTimer","addLeadingZero","value","msDiff","time","convertMs","clearTimer","ms","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,iBAAiB,EAC9CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAS,SAAS,cAAc,oBAAoB,EAE1DL,EAAY,iBAAiB,QAASM,CAAa,EAEnDN,EAAY,SAAW,GACvB,IAAIO,EAAmB,GACnBC,EAAa,GAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,KACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,MAAO,SACf,CAAO,GAEDX,EAAY,SAAW,GACvBO,EAAmBG,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUX,EAAOQ,CAAO,EAExB,SAASH,GAAgB,CACvBE,EAAa,YAAYK,EAAU,GAAI,EACvCb,EAAY,SAAW,GACvBC,EAAM,SAAW,EACnB,CAEA,MAAMa,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAE,GAAG,EAE/D,SAASF,GAAW,CAClB,MAAMG,EAAST,EAAmB,IAAI,KACtC,GAAIS,GAAU,EAAG,CACf,IAAIC,EAAOC,EAAUF,CAAM,EAC3Bd,EAAI,YAAcY,EAAeG,EAAK,IAAI,EAC1Cd,EAAK,YAAcW,EAAeG,EAAK,KAAK,EAC5Cb,EAAO,YAAcU,EAAeG,EAAK,OAAO,EAChDZ,EAAO,YAAcS,EAAeG,EAAK,OAAO,CACpD,MACIN,EAAS,QAAQ,CACf,MAAO,MACP,QAAS,oBACT,MAAO,SACb,CAAK,EACDQ,GAEJ,CAEA,SAASA,GAAa,CACpB,cAAcX,CAAU,EACxBR,EAAY,SAAW,EACzB,CAEA,SAASkB,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}